function convertToRoman(n){
 const roman_table = [
   {1: "I", 5: "V"},
   {10: "X", 50: "L"},
   {100: "C", 500: "D"},
   {1000: "M"}
 ];

  function getRoman(num, i) {
    let fullNum = num + "".padStart(i, "0");    
    const key = Object.keys(roman_table[i]).map(x => Number(x));
    const value = Object.values(roman_table[i]);
    let res = "";

    // from 0 to 999
    if(i <= 2){
      if(Number(fullNum) < (key[1] - key[0])) {
        res = "".padStart(num, value[0]);  
      } else if(Number(fullNum) === (key[1] - key[0])) {
        res = value[0] + value[1];
      } else if(Number(fullNum) >= key[1] && (Number(fullNum) < (key[1] + key[1] - key[0]))){
        res = value[1] + "".padStart(num - 5, value[0]);
      }
      else{
        res = value[0] + Object.values(roman_table[i+1])[0];
      } 
      // from 1000 to up
    } else{
      res = "".padStart(num, value[0]);
    }
    return res;
  }

  const num_to_str = [...`${n}`].reverse();
  const arr_roman = num_to_str.map((ele, index) => getRoman(Number(ele), index));
 return arr_roman.reverse().join("");
}

  convertToRoman(5);

  //Output: V
